image: docker:latest

stages:
  - demand_infrastructure
  - provision_infrastructure
  - decomission_infrastructure
# variables:
#       DOCKER_INTERMEDIATE_IMAGE_LOGIN: '$CI_REGISTRY_IMAGE/intermediate:$CI_PIPELINE_ID'


demand_infrastructure:
  stage: demand_infrastructure
  artifacts: 
    paths:
      - inventory
  script:
    - echo 'foo'
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-west-1" -c create > inventory/master.inv
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-west-3" -c create > inventory/node_1.inv
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-central-1" -c create inventory/node_2.inv

provision_infrastructure:
  image: atarax/ansible
  stage: provision_infrastructure
  dependencies: 
    - demand_infrastructure
  script:
    - ls -la inventory

decomission_infrastructure:
  stage: decomission_infrastructure
  when: always
  script:
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-west-1" -c destroy
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-west-3" -c destroy
    - docker run 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        atarax/rbl-control:stable /rbl-control -r "eu-central-1" -c destroy
